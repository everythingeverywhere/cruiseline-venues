resource_types:
  - name: kubernetes
    type: docker-image
    source:
      repository: zlabjp/kubernetes-resource
      tag: "1.14"

resources:
  - name: venues
    type: git
    check_every: 10s
    source:
      uri: https://github.com/mwright-pivotal/cruiseline-venues.git
      branch: master

#  - name: resource-deploy-web-app
#    type: kubernetes
#    source:
#      server: https://((master-ip)):8443
#      namespace: default
#      token: ((kubernetes-dev-token))
#      insecure_skip_tls_verify: true
jobs:
#  - name: build
#    public: true
#    plan:
#      - get: venue
#        trigger: true
#      - task: Build project
#        privileged: true
#        file: venue/ci/tasks/pack.yml
#        params:
#          GOOGLE_TOKEN: ((google-token))
#          KUBE_CONFIG: ((kube-config))
#          DOCKER_IMAGE: ((docker-image))
#          DOCKER_USERNAME: ((docker-username))
#          DOCKER_PASSWORD: ((docker-password))
#          DOCKER_REGISTRY: ((docker-registry))
  - name: build-docker-image
    plan:
    - get: venues
    - task: build-concourse-lifecycle-task-bionic-image
      config:
        platform: linux
        image_resource:
          type: registry-image
          source: 
            repository: mwrightregistry.azurecr.io/lcycle-task
            tag: latest
            username: ((docker-username))
            password: ((docker-password))
        params:
 #         RUN_AS: cnb
          RUN_IMAGE: cnbs/run:latest
          REPO_NAME: ((docker-image))
          REGISTRY: ((docker-registry))
          REGISTRY_USERNAME: ((docker-username))
          REGISTRY_PASSWORD: ((docker-password))
          APP_FOLDER: venues
        inputs:
        - name: venues
        run: {path: /lifecycle-task/launch.sh}
  - name: deploy
    serial: true
    plan:
      - get: venues
      - task: Deploy to Kubernetes
        file: venues/ci/tasks/deploy-to-k8s.yml
        privileged: true
        config:
          params:
            KUBECONFIG: ((kube-config))
#      - put: resource-deploy-web-app
#        params:
#          kubectl: create -f build-output/deployment.yml
#          wait_until_ready_selector: app=venue
#          context: dev
#          kubeconfig_file: build-output/kube-config

